//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeuristicLab.Tests {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ScriptSources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ScriptSources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HeuristicLab.Tests.HeuristicLab.Scripting_3._3.Script_Sources.ScriptSources", typeof(ScriptSources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///
        ///using HeuristicLab.Analysis;
        ///using HeuristicLab.Data;
        ///using HeuristicLab.Encodings.PermutationEncoding;
        ///using HeuristicLab.Problems.Instances.QAPLIB;
        ///using HeuristicLab.Problems.QuadraticAssignment;
        ///using HeuristicLab.Random;
        ///
        ///public class GAQAPScript : HeuristicLab.Scripting.CSharpScriptBase {
        ///  public override void Main() {
        ///    DateTime start = DateTime.UtcNow;
        ///
        ///    QuadraticAssignmentProblem qap;
        ///    if (vars.Contains(&quot;qap&quot;)) qap = vars.qap;
        ///    else {
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GAQAPScriptSource {
            get {
                return ResourceManager.GetString("GAQAPScriptSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///
        ///using HeuristicLab.Algorithms.DataAnalysis;
        ///using HeuristicLab.Problems.DataAnalysis;
        ///using HeuristicLab.Problems.Instances.DataAnalysis;
        ///using HeuristicLab.Scripting;
        ///
        ///public class RFClassificationCrossValidationScript : HeuristicLab.Scripting.CSharpScriptBase {
        ///  /* Maximum degree of parallelism (specifies whether or not the grid search should be parallelized) */
        ///  const int maximumDegreeOfParallelism = 4;
        ///  /* Number of cross [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GridSearchRFClassificationScriptSource {
            get {
                return ResourceManager.GetString("GridSearchRFClassificationScriptSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///
        ///using HeuristicLab.Algorithms.DataAnalysis;
        ///using HeuristicLab.Problems.DataAnalysis;
        ///using HeuristicLab.Problems.Instances.DataAnalysis;
        ///using HeuristicLab.Random;
        ///using HeuristicLab.Scripting;
        ///
        ///public class RFRegressionCrossValidationScript : HeuristicLab.Scripting.CSharpScriptBase {
        ///  /* Maximum degree of parallelism (specifies whether or not the grid search should be parallelized) */
        ///  const int maximumDegreeOfParallelism =  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GridSearchRFRegressionScriptSource {
            get {
                return ResourceManager.GetString("GridSearchRFRegressionScriptSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Linq.Expressions;
        ///
        ///using HeuristicLab.Algorithms.DataAnalysis;
        ///using HeuristicLab.Core;
        ///using HeuristicLab.Data;
        ///using HeuristicLab.Parameters;
        ///using HeuristicLab.Problems.DataAnalysis;
        ///using HeuristicLab.Problems.Instances.DataAnalysis;
        ///using HeuristicLab.Scripting;
        ///
        ///using LibSVM;
        ///
        ///public class SVMClassificationCrossValidationScript : HeuristicLab.Scripting.CSharpScriptBase {
        ///  /* Maximum degree of parallelism ( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GridSearchSVMClassificationScriptSource {
            get {
                return ResourceManager.GetString("GridSearchSVMClassificationScriptSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Linq.Expressions;
        ///
        ///using HeuristicLab.Algorithms.DataAnalysis;
        ///using HeuristicLab.Core;
        ///using HeuristicLab.Data;
        ///using HeuristicLab.Parameters;
        ///using HeuristicLab.Problems.DataAnalysis;
        ///using HeuristicLab.Problems.Instances.DataAnalysis;
        ///using HeuristicLab.Scripting;
        ///
        ///using LibSVM;
        ///
        ///public class SVMRegressionCrossValidationScript : HeuristicLab.Scripting.CSharpScriptBase {
        ///  /* Maximum degree of parallelism (spec [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GridSearchSVMRegressionScriptSource {
            get {
                return ResourceManager.GetString("GridSearchSVMRegressionScriptSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using System.Threading;
        ///using System.Windows.Forms;
        ///
        ///using HeuristicLab.Algorithms.GeneticAlgorithm;
        ///using HeuristicLab.Core;
        ///using HeuristicLab.MainForm;
        ///using HeuristicLab.MainForm.WindowsForms;
        ///using HeuristicLab.Optimization;
        ///using HeuristicLab.Optimization.Views;
        ///using HeuristicLab.Problems.TravelingSalesman;
        ///
        ///public class GUIAutomationScript : HeuristicLab.Scripting.CSharpScriptBase {
        ///  readonly ManualResetEvent mutex = new ManualResetEvent(false);
        ///
        ///  p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GUIAutomationScriptSource {
            get {
                return ResourceManager.GetString("GUIAutomationScriptSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///
        ///public class OSGARastriginScript : HeuristicLab.Scripting.CSharpScriptBase {
        ///  public override void Main() {
        ///    int N = vars.N.Value;
        ///    double minX = vars.minX.Value;
        ///    double maxX = vars.maxX.Value;
        ///    int seed = vars.seed.Value;
        ///    var rand = new Random(seed);
        ///
        ///    var result = OSGA(rand, popSize: 1000, iterations: 5000, maxSelPres: 1000, mutationRate: 0.1,
        ///         obj: Rastrigin,
        ///      // x ~(i.i.d) U(0,1) * 10.24 - 5.12
        ///         creator: () =&gt; Enum [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OSGARastriginScriptSource {
            get {
                return ResourceManager.GetString("OSGARastriginScriptSource", resourceCulture);
            }
        }
    }
}
